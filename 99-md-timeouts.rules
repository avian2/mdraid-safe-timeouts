# Copyright (C) 2017 by Jonathan G. Underwood
# This file is part of mdraid-safe-timeouts.
#
# mdraid-safe-timeouts is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Foobar is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with mdraid-safe-timeouts.  If not, see
# <http://www.gnu.org/licenses/>.

# This file causes block devices with Linux RAID (mdadm) signatures to
# attempt to set safe timeouts for the drives involved
# See udev(8) for syntax

# Don't process any events if anaconda is running as anaconda brings up
# raid devices manually
ENV{ANACONDA}=="?*", GOTO="md_timeouts_exit"

SUBSYSTEM!="block|machinecheck", GOTO="md_timeouts_exit"

# "noiswmd" on kernel command line stops mdadm from handling
# "isw" (aka IMSM - Intel RAID).
# "nodmraid" on kernel command line stops mdadm from handling
# "isw" or "ddf".
IMPORT{cmdline}="nodmraid"
ENV{nodmraid}=="?*", GOTO="md_timeouts_exit"
IMPORT{cmdline}="noiswmd"
ENV{noiswmd}=="?*", GOTO="md_timeouts_exit"

# Adjust timeouts. This is done by a rule triggered by the
# creation/change of an mdraid array. The script that is run
# establishes what disks comprise the array, and sets their timeouts
# accordingly.

IMPORT{program}="/sbin/mdadm --examine --export $devnode"

ENV{DEVTYPE}=="disk", ACTION=="add|change", \
  ENV{MD_LEVEL}=="raid*", \
  TEST=="/usr/sbin/smartctl", \
  RUN+="/etc/udev/rules.d/mdraid-set-timeouts-for-array.sh $kernel"

LABEL="md_timeouts_exit"
